// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using minas.teste.prototype.MVVM.Repository.Context;

namespace minas.teste.prototype.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250515192910_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("Bombas", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<double?>("DrenoGPM")
                        .HasColumnType("REAL");

                    b.Property<double?>("DrenoLPM")
                        .HasColumnType("REAL");

                    b.Property<int?>("EtapaID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("PilotagemBAR")
                        .HasColumnType("REAL");

                    b.Property<double?>("PilotagemPSI")
                        .HasColumnType("REAL");

                    b.Property<double?>("PressaoBAR")
                        .HasColumnType("REAL");

                    b.Property<double?>("PressaoPSI")
                        .HasColumnType("REAL");

                    b.Property<double?>("RotacaoRPM")
                        .HasColumnType("REAL");

                    b.Property<int?>("SessaoID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("TemperaturaCelsius")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<double?>("VazaoGPM")
                        .HasColumnType("REAL");

                    b.Property<double?>("VazaoLPM")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.HasIndex("EtapaID");

                    b.HasIndex("SessaoID");

                    b.ToTable("Bombas");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Calibracao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("DataCalibracao")
                        .HasColumnType("TEXT");

                    b.Property<double?>("LeituraMax")
                        .HasColumnType("REAL");

                    b.Property<double?>("LeituraMin")
                        .HasColumnType("REAL");

                    b.Property<int?>("ModuloID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notas")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sensor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Unidade")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("ValorGanho")
                        .HasColumnType("REAL");

                    b.Property<double?>("ValorOffset")
                        .HasColumnType("REAL");

                    b.Property<double?>("ValorRefMax")
                        .HasColumnType("REAL");

                    b.Property<double?>("ValorRefMin")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.HasIndex("ModuloID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Calibracoes");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Cilindros", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("EtapaID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("PressaoBAR")
                        .HasColumnType("REAL");

                    b.Property<double?>("PressaoPSI")
                        .HasColumnType("REAL");

                    b.Property<int?>("SessaoID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("TemperaturaCelsius")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<double?>("VazaoLPM")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.HasIndex("EtapaID");

                    b.HasIndex("SessaoID");

                    b.ToTable("Cilindros");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Cliente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CNPJ")
                        .HasColumnType("TEXT");

                    b.Property<string>("CPF")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Endereco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("ID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Comandos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<double?>("DrenoGPM")
                        .HasColumnType("REAL");

                    b.Property<double?>("DrenoLPM")
                        .HasColumnType("REAL");

                    b.Property<int?>("EtapaID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("PilotagemBAR")
                        .HasColumnType("REAL");

                    b.Property<double?>("PilotagemPSI")
                        .HasColumnType("REAL");

                    b.Property<double?>("PressaoBAR")
                        .HasColumnType("REAL");

                    b.Property<double?>("PressaoPSI")
                        .HasColumnType("REAL");

                    b.Property<double?>("RotacaoRPM")
                        .HasColumnType("REAL");

                    b.Property<int?>("SessaoID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("TemperaturaCelsius")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<double?>("VazaoGPM")
                        .HasColumnType("REAL");

                    b.Property<double?>("VazaoLPM")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.HasIndex("EtapaID");

                    b.HasIndex("SessaoID");

                    b.ToTable("Comandos");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Conexao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Arduino")
                        .HasColumnType("TEXT");

                    b.Property<int?>("BaudRate")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("PortaName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("SessaoID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("ID");

                    b.HasIndex("SessaoID");

                    b.ToTable("Conexoes");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Direcao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<double?>("DrenoLPM")
                        .HasColumnType("REAL");

                    b.Property<int?>("EtapaID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("PressaoBAR")
                        .HasColumnType("REAL");

                    b.Property<double?>("PressaoPSI")
                        .HasColumnType("REAL");

                    b.Property<int?>("SessaoID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("TemperaturaCelsius")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<double?>("VazaoGPM")
                        .HasColumnType("REAL");

                    b.Property<double?>("VazaoLPM")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.HasIndex("EtapaID");

                    b.HasIndex("SessaoID");

                    b.ToTable("Direcoes");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Eletrovalvulas", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<double?>("DrenoLPM")
                        .HasColumnType("REAL");

                    b.Property<int?>("EtapaID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("PressaoBAR")
                        .HasColumnType("REAL");

                    b.Property<double?>("PressaoPSI")
                        .HasColumnType("REAL");

                    b.Property<int?>("SessaoID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("TemperaturaCelsius")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<double?>("VazaoGPM")
                        .HasColumnType("REAL");

                    b.Property<double?>("VazaoLPM")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.HasIndex("EtapaID");

                    b.HasIndex("SessaoID");

                    b.ToTable("Eletrovalvulas");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Empresa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("ID");

                    b.HasIndex("CNPJ")
                        .IsUnique();

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Etapa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Modelo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Modulo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Ordem")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("EmpresaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Etapas");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Imagem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClienteID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<byte[]>("Dado")
                        .HasColumnType("BLOB");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notas")
                        .HasColumnType("TEXT");

                    b.Property<int?>("RelatorioID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("EmpresaID");

                    b.ToTable("Imagens");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Modulo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("ID");

                    b.ToTable("Modulos");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Monitoramento", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("BARmax")
                        .HasColumnType("REAL");

                    b.Property<double?>("BARmin")
                        .HasColumnType("REAL");

                    b.Property<double?>("CELSUSmax")
                        .HasColumnType("REAL");

                    b.Property<double?>("CELSUSmin")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<double?>("GPMmax")
                        .HasColumnType("REAL");

                    b.Property<double?>("GPMmin")
                        .HasColumnType("REAL");

                    b.Property<double?>("LPMmax")
                        .HasColumnType("REAL");

                    b.Property<double?>("LPMmin")
                        .HasColumnType("REAL");

                    b.Property<int?>("ModuloID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("PSImax")
                        .HasColumnType("REAL");

                    b.Property<double?>("PSImin")
                        .HasColumnType("REAL");

                    b.Property<double?>("RPMmax")
                        .HasColumnType("REAL");

                    b.Property<double?>("RPMmin")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("ID");

                    b.HasIndex("ModuloID");

                    b.ToTable("Monitoramentos");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Motor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<double?>("DrenoLPM")
                        .HasColumnType("REAL");

                    b.Property<int?>("EtapaID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("PressaoBAR")
                        .HasColumnType("REAL");

                    b.Property<double?>("PressaoPSI")
                        .HasColumnType("REAL");

                    b.Property<double?>("RotacaoRPM")
                        .HasColumnType("REAL");

                    b.Property<int?>("SessaoID")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("TemperaturaCelsius")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<double?>("VazaoGPM")
                        .HasColumnType("REAL");

                    b.Property<double?>("VazaoLPM")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.HasIndex("EtapaID");

                    b.HasIndex("SessaoID");

                    b.ToTable("Motores");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Relatorio", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClienteID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Conclusao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Contato")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EtapaID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ImagemID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ModuloID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NumeroSerie")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SessaoID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("EmpresaID");

                    b.HasIndex("EtapaID");

                    b.HasIndex("ImagemID")
                        .IsUnique();

                    b.HasIndex("ModuloID");

                    b.HasIndex("SessaoID");

                    b.ToTable("Relatorios");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.SensorConfiguracao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CalibracaoID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("SensorDataID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("ID");

                    b.HasIndex("CalibracaoID");

                    b.ToTable("SensoresConfiguracao");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.SensorDataDB", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("EtapaID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Medida")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sensor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("SensorConfiguracaoID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SessaoID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<double?>("Valor")
                        .HasColumnType("REAL");

                    b.HasKey("ID");

                    b.HasIndex("EtapaID");

                    b.HasIndex("SensorConfiguracaoID");

                    b.HasIndex("SessaoID");

                    b.ToTable("SensorDataDB");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Sessao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClienteID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ModuloID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("UsuarioID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("EmpresaID");

                    b.HasIndex("ModuloID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Sessoes");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.TempoExecucao", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("Duracao")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("ID");

                    b.ToTable("TemposExecucao");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("EmpresaID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TerminateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("ID");

                    b.HasIndex("EmpresaID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsAdmin = true,
                            Name = "admin",
                            UpdateTime = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("Bombas", b =>
                {
                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Etapa", "Etapa")
                        .WithMany()
                        .HasForeignKey("EtapaID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Sessao", "Sessao")
                        .WithMany()
                        .HasForeignKey("SessaoID");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Calibracao", b =>
                {
                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("ModuloID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Cilindros", b =>
                {
                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Etapa", "Etapa")
                        .WithMany()
                        .HasForeignKey("EtapaID");

                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Sessao", "Sessao")
                        .WithMany()
                        .HasForeignKey("SessaoID");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Cliente", b =>
                {
                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Comandos", b =>
                {
                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Etapa", "Etapa")
                        .WithMany()
                        .HasForeignKey("EtapaID");

                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Sessao", "Sessao")
                        .WithMany()
                        .HasForeignKey("SessaoID");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Conexao", b =>
                {
                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Sessao", "Sessao")
                        .WithMany()
                        .HasForeignKey("SessaoID");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Direcao", b =>
                {
                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Etapa", "Etapa")
                        .WithMany()
                        .HasForeignKey("EtapaID");

                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Sessao", "Sessao")
                        .WithMany()
                        .HasForeignKey("SessaoID");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Eletrovalvulas", b =>
                {
                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Etapa", "Etapa")
                        .WithMany()
                        .HasForeignKey("EtapaID");

                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Sessao", "Sessao")
                        .WithMany()
                        .HasForeignKey("SessaoID");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Etapa", b =>
                {
                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");

                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Imagem", b =>
                {
                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID");

                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Monitoramento", b =>
                {
                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("ModuloID");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Motor", b =>
                {
                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Etapa", "Etapa")
                        .WithMany()
                        .HasForeignKey("EtapaID");

                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Sessao", "Sessao")
                        .WithMany()
                        .HasForeignKey("SessaoID");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Relatorio", b =>
                {
                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID");

                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");

                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Etapa", "Etapa")
                        .WithMany()
                        .HasForeignKey("EtapaID");

                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Imagem", "Imagem")
                        .WithOne("Relatorio")
                        .HasForeignKey("minas.teste.prototype.MVVM.Model.Concrete.Relatorio", "ImagemID");

                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("ModuloID");

                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Sessao", "Sessao")
                        .WithMany()
                        .HasForeignKey("SessaoID");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.SensorConfiguracao", b =>
                {
                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Calibracao", "Calibracao")
                        .WithMany()
                        .HasForeignKey("CalibracaoID");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.SensorDataDB", b =>
                {
                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Etapa", "Etapa")
                        .WithMany()
                        .HasForeignKey("EtapaID");

                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.SensorConfiguracao", "SensorConfiguracao")
                        .WithMany()
                        .HasForeignKey("SensorConfiguracaoID");

                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Sessao", "Sessao")
                        .WithMany()
                        .HasForeignKey("SessaoID");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Sessao", b =>
                {
                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID");

                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaID");

                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Modulo", "Modulo")
                        .WithMany()
                        .HasForeignKey("ModuloID");

                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID");
                });

            modelBuilder.Entity("minas.teste.prototype.MVVM.Model.Concrete.Usuario", b =>
                {
                    b.HasOne("minas.teste.prototype.MVVM.Model.Concrete.Empresa", "Empresa")
                        .WithMany("Usuarios")
                        .HasForeignKey("EmpresaID");
                });
#pragma warning restore 612, 618
        }
    }
}
